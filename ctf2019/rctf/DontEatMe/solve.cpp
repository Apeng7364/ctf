#include<pch.h>
#include<iostream>
using namespace std;

unsigned int const0[] = { 0x459FC5A5, 0x7FC789F4, 0x0FBB675AB, 0x65917E7D, 0x0F90902DF, 0x0AF945AF7, 0x0A87034DA, 0x3AABD494, 0x504E015E, 0x0C96E5B77, 0x0AFD7CF57, 0x2A1948B5, 0x7BF2E1AF, 0x0E89075ED, 0x5C0DB5C6, 0x6C90C3F3, 0x397E24DD, 0x262E0C48, 0x0EBD8BF12, 0x0A439AC9E, 0x791C72BB, 0x0B7076160, 0x0AA545E52, 0x7D55F11C, 0x0E9ADA6B6, 0x32EAD595, 0x0C94C2B14, 0x2E0BBD9F, 0x9AA1A601, 0x0D02F0B5D, 0x0D0699D06, 0x16A4F9CC, 0x2AAA9A3B, 0x3507293E, 0x82F618CE, 0x0D8303DDA, 0x5E0CB782, 0x1AC22EEF, 0x5E7FF8F4, 0x26CEFC03, 0x0CDDFBBA8, 0x55D80628, 0x0D5EC1A46, 0x1E00E511, 0x9B46FC6E, 0x2DB1E6E0, 0x0CBDF9395, 0x0E00B33D9, 0x5A43D50F, 0x447DE041, 0x0C58E5C38, 0x1763413E, 0x7FE9B647, 0x0C37B0FB2, 0x27A2B087, 0x8037A85E, 0x0F47FEA64, 0x592A892F, 0x0ECAD7E7F, 0x886AD0FB, 0x17B545E7, 0x0BFB8CD9D, 0x5206FAEC, 0x205AC34F, 0x0B9112B48, 0x8F64D407, 0x0A76EBC2F, 0x238C306D, 0x56D18B07, 0x0E442447F, 0x0C0AEB75F, 0x8D7ADFDA, 0x39872D01, 0x7247AE8, 0x59DBD0F4, 0x985B4AF0, 0x9EA38B5, 0x9C104491, 0x3B135C6D, 0x0C69E7858, 0x0E65022F0, 0x0D9943FF4, 0x0AABEDF0A, 0x0B66814B1, 0x1F927210, 0x9961DD03, 0x4BCDC827, 0x0BB14DD9F, 0x40FE24C3, 0x5B7FE695, 0x0B332F95C, 0x65262E3, 0x2926942D, 0x9E53F796, 0x7DBFAA45, 0x355B70ED, 0x672DFA65, 0x0C5D715B0, 0x0D885410D, 0x5DEA7836, 0x0D5EA8A92, 0x0F14E1A6A, 0x0A02AB37D, 0x0F5EC3E46, 0x9B2D3B45, 0x0A45D8759, 0x5656AC15, 0x45001507, 0x0D0CA4495, 0x5C9B0A9A, 0x0BA41CC1A, 0x5B6B7192, 0x5B5B0296, 0x0EB62D7F8, 0x63E052B8, 0x5E7F661A, 0x15F54EB2, 0x32BC0DC1, 0x757F8AC1, 0x4000E44A, 0x4C7C3F6D, 0x35152D7, 0x0B215A2FA, 0x0ECF8F423, 0x368A6EFB, 0x0B705DD1F, 0x0B0EA07D4, 0x0B6DC6BC9, 0x37F9F551, 0x0F9B6703A, 0x7C12AA99, 0x0A82E5C89, 0x0C4ABD951, 0x0BB24942, 0x5106CDF4, 0x0D20ACB1F, 0x0B06A021, 0x0F5721C2C, 0x0DC6D6A4D, 0x0B416E5DB, 0x51A2E03, 0x0E619C398, 0x59E2A278, 0x75AE0501, 0x33DF6E1D, 0x7F5F8F1D, 0x0D3B09DFA, 0x5CCEF854, 0x353A9751, 0x28CDF4C3, 0x0FA84DF8A, 0x0B77937F6, 0x89DEF60E, 0x0EF104A33, 0x73A9B332, 0x0A2B958D4, 0x0B7F11FAE, 0x0AB10382B, 0x610507CB, 0x0C2494EB2, 0x38B0E08C, 0x0B45BE251, 0x0B6C9324D, 0x50A16213, 0x0E10FA30C, 0x0E08F5DA5, 0x222F5327, 0x0F3B44C04, 0x1822F6D, 0x0EC8D1AFB, 0x0E77C8F3, 0x0B94AD1F2, 0x7EC184CB, 0x8F24309C, 0x6BCEE4CF, 0x0D73B45D7, 0x497F0CCD, 0x31A6DC74, 0x33769D5B, 0x0D0FAAD9C, 0x93247C0E, 0x0EF989638, 0x639429F7, 0x347B185A, 0x0AB662E53, 0x0ADB55832, 0x460EAECB, 0x4CFF4967, 0x32983144, 0x0BE7C9F6A, 0x6572690F, 0x0B6A44EC6, 0x296B626B, 0x6F84AC06, 0x0A4109176, 0x9696DA0, 0x0CF01E53A, 0x0A2C947B3, 0x5018011, 0x3C422118, 0x0C0B3B8FC, 0x974DB30E, 0x6CAFF180, 0x5ED053FF, 0x7586923B, 0x0D18AD289, 0x6ADDD492, 0x181D1549, 0x8565132A, 0x11B56CC7, 0x0FE064E6F, 0x0ED2CEFC0, 0x8861E9CF, 0x35DE598F, 0x1852B4BC, 0x5E58E9F7, 0x0C1EBF4F6, 0x6A1A68, 0x0D6970D50, 0x94153D1C, 0x0C3913B30, 0x81CCDFDF, 0x4BDA28AF, 0x0E47E5EF7, 0x9EBC1A89, 0x3FFD9A1B, 0x0E6E81C84, 0x579CBD80, 0x540CDE20, 0x3D03D046, 0x0B30BD041, 0x1B47C861, 0x0B12E9CFB, 0x0EB89F014, 0x0D9370AE3, 0x80087376, 0x65D3550C, 0x6E4CDBB7, 0x235D3750, 0x99B3B43E, 0x38FFABD3, 0x75C8BC8A, 0x0FEFA00F1, 0x0DD8F7F38, 0x42DBF66F, 0x606BC6B0, 0x0D00CA499, 0x0F6BC1178, 0x85C2C6BD, 0x2DF5F445, 0x6BB5EB11, 0x8027805B, 0x0FE6ABACD, 0x0A782A5C7, 0x0A5F5B40A, 0x0AC3F2CA5 };
unsigned int const1[] = { 0x3B928883, 0x0A954448B, 0x0FD81975A, 0x59BE145A, 0x0CE903CCA, 0x636CE1F9, 0x0F1B92DCC, 0x2B255DFA, 0x0F24D3C82, 0x391B2517, 0x3D670DB, 0x5D630DD8, 0x50D515CB, 0x0D21AF9C3, 0x0C92B08CD, 0x9157B9AC, 0x0B51E501C, 0x362812DC, 0x0BE36DBCB, 0x6CB41118, 0x61CA6755, 0x0E477CA36, 0x0B3DDA664, 0x6665D16, 0x5B83FA2C, 0x0F4797850, 0x10D61B1C, 0x0D82BC254, 0x17D8A560, 0x0C281F6A5, 0x0EC3AE828, 0x2905C224, 0x0D4FE451A, 0x43744CEB, 0x5E474E9C, 0x749BFACD, 0x0D054E526, 0x162C850D, 0x72A714E9, 0x0FE46AC10, 0x3487BC05, 0x2C8AEA43, 0x9E3F2FF8, 0x2F0E5C23, 0x0D3E784C8, 0x8E20D985, 0x3DA8DF49, 0x63AD4B53, 0x7C9B3978, 0x4FED2F4E, 0x252C0D9C, 0x5AC1BCBB, 0x0B4273B2F, 0x6F2009C, 0x5A5DD8F1, 0x59F768E0, 0x0AC518815, 0x2B8F713F, 0x2AFD2285, 0x0A88492D, 0x703974BB, 0x0E61EBE48, 0x0EBD57CD3, 0x0F03CB920, 0x0B014F855, 0x40BB0D0C, 0x0FABEFE58, 0x28E5D18C, 0x8CF8517, 0x203372AE, 0x0DF4C9D0C, 0x8C387224, 0x9213FA25, 0x1BE46332, 0x0E9E8FA1F, 0x0C5130557, 0x0FD632B81, 0x0D7137EAF, 0x0D1751BF9, 0x1ECDB40D, 0x4D3ACC6, 0x3B3C44CC, 0x126F70C6, 0x0AE14D8DE, 0x9249A6B, 0x8E602082, 0x94EBCD7B, 0x93EA6071, 0x87CB1D04, 0x0E48BC7BD, 0x6E86AB4B, 0x736314FE, 0x4F0D819A, 0x6A4FA2DE, 0x0F2284933, 0x2FD58EF7, 0x1E19833E, 0x48AA62F7, 0x4A9D931D, 0x82BAEBBD, 0x22BC1AEE, 0x0E02E5E94, 0x76E42B6E, 0x21169B3B, 0x78410E1C, 0x366D3DBB, 0x0F7B7AC7B, 0x5C12F29C, 0x4E271BE5, 0x4BAA9AB7, 0x2724BF08, 0x492AC28F, 0x6AD0F63, 0x0ED6B287D, 0x0EDBCBA48, 0x3384877C, 0x0ECBBC030, 0x0B82E3B2A, 0x92160A7C, 0x0F23874C3, 0x75E84887, 0x6A2107D4, 0x0AB01A6E8, 0x7232BDA4, 0x219FAD2D, 0x0E016178A, 0x61F22009, 0x5850B00D, 0x0C69FEF72, 0x79908C67, 0x17A0173B, 0x0C2F925AC, 0x560B1C81, 0x0ADF339C4, 0x38E19FB8, 0x0E41D5795, 0x0CE3A4B81, 0x7F152D4B, 0x4B238BFC, 0x4FC5592, 0x5465AC3B, 0x3845BF97, 0x0A658D9F2, 0x47E82467, 0x986593C9, 0x1191C0CB, 0x147CC08C, 0x496336AE, 0x0EAE5DA8A, 0x7DA03065, 0x0B7411D, 0x22AB8BD5, 0x3CAA62BF, 0x0B0581433, 0x73DD39FB, 0x5E9EE883, 0x0B91A3D18, 0x0A52B2D1A, 0x5834365, 0x1F9ED6B2, 0x0AD3B591B, 0x9BDBF823, 0x6807BE03, 0x414F751, 0x0FF70EC21, 0x0FEB07CBA, 0x47690BE, 0x603E8BF3, 0x16D2BC40, 0x572216EF, 0x63FF8C4C, 0x77991CCE, 0x36B2400D, 0x9977BDAF, 0x4C9621F, 0x0C37DC00B, 0x9CC85CB2, 0x0C5E01FDE, 0x2D75607D, 0x0A0F556DB, 0x0C97F64E4, 0x0B579B604, 0x91C35F26, 0x21AF8C37, 0x0B743C7FD, 0x12FB7F18, 0x885237F5, 0x1BBFCC6B, 0x5C1FE441, 0x0BFEF973A, 0x0EC4676C5, 0x4A47CC65, 0x971EC8EE, 0x3B1DB437, 0x5CC8BFB3, 0x0B6FA47C5, 0x0F8E4C599, 0x475D776B, 0x0F1CB0976, 0x0A3C7A932, 0x0C79A3984, 0x84FD354, 0x0DAE6388B, 0x91A70338, 0x87CA30E9, 0x5DABEF28, 0x1EE48985, 0x0BD7FAEFF, 0x44013C1F, 0x570FEED8, 0x7CB22CD1, 0x8311758, 0x5AB5DCEB, 0x0FD96B8B8, 0x0A80CE023, 0x30BBB19D, 0x3B33E05A, 0x0C7649D1E, 0x4044428F, 0x0FE0630C9, 0x0F656070D, 0x303A0A5D, 0x16A668B3, 0x0ABB0B40E, 0x4ABC9220, 0x6038B47F, 0x71CF3E0A, 0x0FC69DAA6, 0x0FCA9C550, 0x17427DEA, 0x4DCE3693, 0x2361B041, 0x0D0CCCD10, 0x2F270DAF, 0x348FA060, 0x1177CE40, 0x706666B6, 0x0C329DAF7, 0x0E3CCA015, 0x0D6D9596F, 0x0B2C18EDD, 0x25CBE2D3, 0x0C1A6E67D, 0x0D9935CF7, 0x0E3D91858, 0x0FF9ADE8D, 0x4EF7FFD9, 0x0AABA3CA9, 0x8A831B4D, 0x1FF14B96, 0x9868C966, 0x938E9D32, 0x4216BFC4, 0x7119F0E1, 0x592E37B8, 0x4BD7DF7C };
unsigned int const2[] = { 0x5E476C95, 0x3168871, 0x0EBD956D8, 0x0FADE7AC3, 0x0E562A819, 0x0E68BB4B7, 0x129E1D0, 0x0BEFBAC4D, 0x0C5997B2, 0x50EF791A, 0x0AD7115, 0x0C03CF6DD, 0x0F88F22DD, 0x395AF289, 0x2D086919, 0x64B9435C, 0x3D4E53BF, 0x26ED3F3A, 0x73CD31A6, 0x632BCAA9, 0x8D9D5141, 0x0BC20D5E8, 0x7CA24F43, 0x0EAE0EAB, 0x0A1D25EBE, 0x0C66E4A8B, 0x0EFD2B05F, 0x0EA54005E, 0x0BBCAD27C, 0x23B477DE, 0x0E7ACF2EF, 0x0DA45B6EB, 0x0A2AB9714, 0x0E2A9D8E4, 0x0F7473FD7, 0x0B79E7CE2, 0x0B11BD3F7, 0x4B979910, 0x6ADBAD2A, 0x0C23C23CA, 0x56B858FB, 0x8D3D9D78, 0x566BEF22, 0x0F7C4648C, 0x270E5502, 0x0D5153361, 0x0B46605CA, 0x0F0EA6E35, 0x248AA1D1, 0x37A904E7, 0x0F9C409F8, 0x0C7D6E847, 0x9DB3D65E, 0x0EEAE0657, 0x0ED4B16E8, 0x0AB272744, 0x8A69915A, 0x0ABF472DB, 0x431BAF68, 0x5D5A63F1, 0x5A241614, 0x0A6DD595C, 0x62377A57, 0x2E1AA3AE, 0x0C6C92EEE, 0x628F8657, 0x450BCD12, 0x19F51364, 0x14E560C7, 0x0A47AF9FB, 0x1E9B75E1, 0x25C6B3BD, 0x0EE134C8A, 0x0ED77A7B1, 0x0A39BC567, 0x6249661A, 0x0B1E1E269, 0x0D4EEDA36, 0x52F1EB18, 0x783AB90C, 0x4F18A1B5, 0x6389A50E, 0x4158FF06, 0x288D47FA, 0x5FED30FD, 0x702EFEE, 0x2D7E047E, 0x39CA116A, 0x1464EA6E, 0x0EC17671D, 0x82461730, 0x0DA992326, 0x0A290BC72, 0x0FE4DD1E1, 0x7C151D78, 0x896F2FA5, 0x7C143A6D, 0x0EEBB14FD, 0x79E59DA, 0x0B4CAFA56, 0x0BB10D122, 0x0CA116CC, 0x5B9C3DDC, 0x5C01058E, 0x0AFDBEC14, 0x997D56F4, 0x5B5D990A, 0x547664C2, 0x2F2F0E34, 0x3E575455, 0x118DD381, 0x0D5DD373F, 0x0CFD58F8F, 0x0DD8414C3, 0x2ADE2230, 0x7BB8EED7, 0x7D578A25, 0x0D69388CD, 0x66610227, 0x8EC11A15, 0x81E128E1, 0x0A8C8365E, 0x0F11A5E70, 0x516F9B89, 0x579A6702, 0x82453EB8, 0x3F3A711E, 0x0A3BAF6BF, 0x0A6A1E0EB, 0x0D33DD107, 0x0C9B45D9D, 0x0D57C6ABB, 0x70951630, 0x0DA574F0, 0x8C364C1F, 0x18E5DB9, 0x0A1C5517B, 0x79FF0653, 0x4060D6A9, 0x99B1B1C1, 0x0BCA6377, 0x0F84546B2, 0x30A65E11, 0x286F3FAF, 0x15CF5B32, 0x21A457FE, 0x1B37F262, 0x60B7D2FE, 0x40BA4178, 0x0B670B823, 0x98F45A98, 0x6012AFF7, 0x0B65FF911, 0x0EADBA9FE, 0x840DDCA9, 0x8B8CAF6A, 0x0B7335C16, 0x0A15856B7, 0x0F2056C14, 0x74DC21D3, 0x2E26E414, 0x13515128, 0x0A3EA4C1C, 0x1629376F, 0x9E1A8BBC, 0x745BFB36, 0x3C284848, 0x20D7056E, 0x9408F410, 0x0F2EF22A5, 0x2AC8CFCF, 0x0AFB2BC7E, 0x0B9B33834, 0x0A2E3ABBB, 0x82F760BC, 0x0A08D613F, 0x0D993A7DC, 0x398B419, 0x0F7076946, 0x0D188A326, 0x556AF04D, 0x0BABC157F, 0x1B5DC56F, 0x0F142CE64, 0x8DA31C30, 0x47D32FF0, 0x0C542462D, 0x0B5C1C5F6, 0x0AAE1126C, 0x0A3B8E016, 0x4B510673, 0x6EE84CBF, 0x87729A96, 0x0F8EA27BA, 0x1F727559, 0x0B0E79D97, 0x95676F4A, 0x0AAA351A2, 0x767CCA57, 0x60F3EC1C, 0x46F6737A, 0x3D16D3E7, 0x2D73F2D3, 0x0DC214874, 0x29B40C25, 0x1959F9EE, 0x0C6C9C4DE, 0x0ED342C68, 0x4C6C704C, 0x0B2D7B5DB, 0x0ACCEAA9C, 0x0D08C1AF8, 0x836B6CF0, 0x2EC53D53, 0x0E5642FA1, 0x84EA2D1A, 0x17DFE4B9, 0x0D7B34225, 0x0D5D63737, 0x4E4E04B0, 0x0CF55CF68, 0x0D4A8DB0D, 0x0C012C96, 0x381568E3, 0x9236A510, 0x0A5A264AF, 0x0A4B97409, 0x0D5D5C8CB, 0x0F85BB6D8, 0x0B017FD3D, 0x2E910D94, 0x707DD1E0, 0x5393787D, 0x0D66A707C, 0x0B48C276E, 0x47E94C4E, 0x656D90D5, 0x0BC465549, 0x0C94BD5A6, 0x1C60AFAC, 0x3C9AA09C, 0x3DFDB235, 0x3B21C194, 0x5787CDF2, 0x3532F09D, 0x4BE4DEB6, 0x44AD4BF8, 0x0B36A893D, 0x821CBE39, 0x20B711AA, 0x77F2CF00, 0x8C3FB88A, 0x0C0B9B168, 0x5D245929, 0x0B7D5DAFB, 0x859D8F29 };
unsigned int const3[] = { 0x0DA579091, 0x36589232, 0x0E7B84792, 0x78E07F17, 0x36FA15A6, 0x0F0427E9F, 0x71406628, 0x0FA9B4784, 0x0F2655356, 0x995944EC, 0x437C367D, 0x0DBCDE65B, 0x6BA84E55, 0x308D07AE, 0x3DA486BB, 0x4E21B79, 0x6CE11C5B, 0x16ED3875, 0x883B60BA, 0x0FB72C8DF, 0x4A086E1B, 0x9DC7E017, 0x0F8DA215B, 0x0D5C5718, 0x68A5E75A, 0x920DD029, 0x8BDBB753, 0x523F494F, 0x0F7038820, 0x8F173C5F, 0x0E7B9C003, 0x0A175A5B, 0x783E2CCF, 0x0CE606562, 0x746082D0, 0x0F5E4B9B3, 0x8D3FE374, 0x38A38F39, 0x0AD82BBDD, 0x0AFD383B2, 0x792D15, 0x0D18FDA0, 0x75413917, 0x0CC60E9AB, 0x64AB36FA, 0x1B7C0F0B, 0x83810F82, 0x150942AA, 0x5E65471A, 0x0C1CA3BD4, 0x29746D45, 0x9DAE078, 0x2919D6A8, 0x396F2A25, 0x536A4D3C, 0x579DAD7A, 0x0CBC13F7D, 0x9F7ACA79, 0x0A3E33AD9, 0x4455D4BF, 0x9DF3512E, 0x0E8ADFADA, 0x1F28C704, 0x2EBCE471, 0x0ADC7D412, 0x5DF3B361, 0x0D7BA20F0, 0x0DB88BDB5, 0x4DAF222, 0x98D7B48E, 0x1F900BDB, 0x0C34AC529, 0x0FD3F8659, 0x12C202E7, 0x974775B5, 0x0A511DC77, 0x59EDD580, 0x0F69A10B5, 0x79EA901A, 0x64DF1444, 0x66C7B59B, 0x0EBF10CB2, 0x769C7B29, 0x0E5AF6BF1, 0x0A1B398CF, 0x0E16484A8, 0x0B7764140, 0x0F101A355, 0x37D24DD7, 0x7CAA2209, 0x0FB8F2F11, 0x0E69C7211, 0x12811348, 0x0C0E9EA5E, 0x0B7925FB8, 0x3C88C806, 0x159C9E4, 0x0C616699E, 0x0ACD60B32, 0x0B30DDE1A, 0x0DF39517E, 0x0B93DEE31, 0x6E86159B, 0x0C3616961, 0x0B6C89355, 0x12AAC939, 0x3664BC33, 0x45E4BDC6, 0x0E1719D67, 0x524055CA, 0x0A839D8EB, 0x51EA04AD, 0x0A6A4D406, 0x0AD8832E3, 0x0CA852837, 0x0E142A6E3, 0x0A1A400D6, 0x0FA35744D, 0x0BEF1E464, 0x997B4AF8, 0x6D40427C, 0x0BF8974D3, 0x39A896F7, 0x0CDACF64D, 0x0A42E80DA, 0x0E4461B32, 0x0CCAD0577, 0x0D895E7BD, 0x7DBB265A, 0x65852658, 0x0CDA62FDE, 0x0FAD0669E, 0x4B3CE34E, 0x0E05C7C73, 0x0D891CD5C, 0x4FC4AA4B, 0x0D1DC690, 0x57BEED7D, 0x0DD09631E, 0x5DABD689, 0x0D39B2958, 0x72441210, 0x0D7E9B2E8, 0x0A7B762E5, 0x494F61F, 0x53A5E356, 0x0F7978852, 0x0B324B320, 0x13F42919, 0x0A9F7BE79, 0x446D36E7, 0x0A8445880, 0x1C1CA702, 0x13C2ACA2, 0x0EB066DD4, 0x7891D1DC, 0x65AD6853, 0x0B3D70960, 0x8B6FA2C7, 0x0C62583D6, 0x5AD90C97, 0x3423D303, 0x0C2E13FE7, 0x0D265DE71, 0x0EB31AA78, 0x7582CFDF, 0x427E371, 0x76495A72, 0x4B47B543, 0x767211EC, 0x5EEC75DB, 0x0BC0281A3, 0x3100BEDA, 0x9BF13F32, 0x4625717F, 0x110DB24A, 0x0E55CE10, 0x0F4FBB28F, 0x8B75227D, 0x0C3DA7A8A, 0x0B826CA8F, 0x5D8D6195, 0x0E0029488, 0x888055C5, 0x781F037A, 0x0C9F5486A, 0x0CDF260D9, 0x0CC30B60F, 0x4462550C, 0x688C013A, 0x9A44D732, 0x0B0389A34, 0x60BA7236, 0x0FE758D77, 0x0DFF7E69A, 0x0F6159765, 0x824DF1A0, 0x7634D70C, 0x0C90EA62F, 0x600B3B99, 0x886F8556, 0x0C66BAF96, 0x52E382AF, 0x733CAAD9, 0x9B92D0A5, 0x0CFB3E9CA, 0x0EB0AD91A, 0x0D80D780F, 0x399C80F5, 0x0DC9DF1A6, 0x319E19B4, 0x7E0D0F72, 0x3CC646D, 0x701A7074, 0x5263E055, 0x0A4FD7B32, 0x9C8ACE37, 0x0E853F925, 0x4F4C4C80, 0x73502E76, 0x341064E2, 0x0EDF99D78, 0x7ED987B6, 0x0C3B0C7C8, 0x28AE1BD0, 0x87B50B85, 0x0B0E2F87D, 0x0A95837A8, 0x84788413, 0x0A56C5CF9, 0x0B3EACFE6, 0x2820F4A1, 0x0C690DC48, 0x63C0B2C0, 0x0B2794E7, 0x833C4137, 0x0AA7F87B8, 0x0C9E4252D, 0x0AC459CCF, 0x57733C5F, 0x0B83E0392, 0x64FAF7F2, 0x0ED2B2884, 0x8CEA3055, 0x0C87B67C0, 0x0E28ECB13, 0x440A06E, 0x28164E5A, 0x0F52FBC43, 0x0C347BDE0, 0x0A7463ACD, 0x4659105E, 0x0FC68D479, 0x0D893FC0, 0x0CDAA86FC, 0x1D380A6F };
unsigned int delta[] = { 0x0CDC56A63, 0x4EC090F1, 0x21EDD1DA, 0x0C270CEF2, 0x2FED34D7, 0x83DF5638, 0x0D5C182D5, 0x0BF870104, 0x99CC5FB9, 0x0EDA87ED6, 0x3250667D, 0x4D98EE5D, 0x1F2F3443, 0x4BCDEF38, 0x0FA6E01C, 0x0DDDDA728 };


int main()
{
	int i, j;
	int a, b;
	int tmp;
	/*
	//encrypt
	int plain[] = { 0x11223344,0x55667788 };
	a = plain[0];
	b = plain[1];
	for (i = 0; i < 16; i++)
	{
		unsigned int i0, i1, i2, i3;
		tmp = delta[15-i] ^ a;
		i0 = (tmp >> 24)&0xff;
		i1 = (tmp >> 16) & 0xff;
		i2 = (tmp >> 8) & 0xff;
		i3 = tmp & 0xff;
		a = b ^ (const3[i3] + (const2[i2] ^ (const1[i1] + const0[i0])));
		b = tmp;
	//	cout<<hex << a <<' '<< b << endl;
	}
	b ^= 0xC12083C0;
	a ^= 0x6809DCE2;
	cout << hex << a << ' ' << b<<endl;
	*/
	//decrypt
	int cipher[] = { 0x77646464, 0x61617777 ,0x77777761, 0x64646464 };
	for (j = 1; j >= 0; j--)
	{
		a = cipher[j * 2];
		b = cipher[j * 2 + 1];
		a ^= 0x6809DCE2;
		b ^= 0xC12083C0;
		for (i = 0; i < 16; i++)
		{
			tmp = b;
			unsigned int i0, i1, i2, i3;
			i0 = (tmp >> 24) & 0xff;
			i1 = (tmp >> 16) & 0xff;
			i2 = (tmp >> 8) & 0xff;
			i3 = tmp & 0xff;
			b = a ^ (const3[i3] + (const2[i2] ^ (const1[i1] + const0[i0])));
			a = tmp ^ delta[i];
		}
		cout << hex << a << b;
	}
	return 0;
}
