opcode = [[0x21, 0x0, 0x81], [0x27, 0x1, 0x1], [0x24, 0x1, 0x1], [0x23, 0x2, 0x0], [0x22, 0x3, 0x2], [0x21, 0x4, 0x8], [0x28, 0x3, 0x4], [0x27, 0x2, 0x3], [0x28, 0x3, 0x4], [0x27, 0x2, 0x3], [0x28, 0x3, 0x4], [0x27, 0x2, 0x3], [0x27, 0x3, 0x3], [0x23, 0x4, 0x3], [0x24, 0x3, 0x2], [0x27, 0x2, 0x4], [0x24, 0x0, 0x2], [0x21, 0x1, 0x1], [0x25, 0x0, 0x1], [0x22, 0x1, 0x0], [0x21, 0x2, 0x81], [0x26, 0x1, 0x2], [0x21, 0x2, 0x9], [0x26, 0x1, 0x2], [0x21, 0x2, 0x9], [0x2D, 0x2, 0x1], [0x21, 0x0, 0x81], [0x22, 0x1, 0x0], [0x21, 0x2, 0x9], [0x25, 0x1, 0x2], [0x23, 0x3, 0x0], [0x23, 0x4, 0x1], [0x26, 0x3, 0x4], [0x21, 0x4, 0x7E], [0x2D, 0x4, 0x3], [0x21, 0x3, 0x1], [0x25, 0x0, 0x3], [0x25, 0x1, 0x3], [0x26, 0x2, 0x3], [0x21, 0x4, 0x5A], [0x2D, 0x4, 0x2], [0x2F, 0x0, 0x0], [0x30, 0x0, 0x0]]

def ana(a):
    if a[0] == 0x21:
        return ("mov r%d, 0x%x"%(a[1],a[2]))
    elif a[0] == 0x22:
        return ("mov r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x23:
        return ("mov r%d, [r%d*4 +0E48h]"%(a[1],a[2]))
    elif a[0] == 0x24:
        return ("mov [r%d*4 + 0E48h], r%d"%(a[1],a[2]))
    elif a[0] == 0x25:
        return ("add r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x26:
        return ("sub r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x27:
        return ("xor r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x28:
        return ("shl r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x29:
        return ("shr r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x2a:
        return ("and r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x2b:
        return ("jmp r%d"%(a[1]))
    elif a[0] == 0x2c:
        return ("jz r%d, r%d"%(a[2],a[1]))
    elif a[0] == 0x2d:
        return ("jnz r%d, r%d"%(a[1],a[2]))
    elif a[0] == 0x2e:
        return ("pause")
    elif a[0] == 0x2f:
        return ("correct!")
    elif a[0] == 0x30:
        return ("wrong!")
    else :
        return ("error!")
    
# for i in range(len(opcode)):
#     print('%02d'%i, ana(opcode[i]))

cipher = [0x65, 0x55, 0x63, 0x57, 0x01, 0x04, 0x53, 0x06, 0x49, 0x49, 0x49, 0x1F, 0x1F, 0x07, 0x57, 0x51, 0x57, 0x43, 0x5F, 0x57, 0x57, 0x5E, 0x43, 0x57, 0x0A, 0x02, 0x57, 0x43, 0x5E, 0x03, 0x5E, 0x57, 0x00, 0x00, 0x59, 0x0F]
key = [0 for i in range(4)]
plain = ''
for i in range(0,36,4):
    temp = cipher[i:i+4]
    for j in range(4):
        temp[j] ^= key[j]
    key = temp[:]
    for j in range(1,4)[::-1]:
        temp[j]^=temp[j-1]
    for j in range(4):
        plain+=chr(temp[j])
print(plain)