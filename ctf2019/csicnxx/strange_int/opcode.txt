00            mov r0, 0x81
01            xor r1, r1
02            mov [r1*4 + 0E48h], r1
02 loc_03     
03            mov r2, [r0*4 +0E48h]	;plain
04            mov r3, r2
05            mov r4, 0x8
06            shl r3, r4
07            xor r2, r3
08            shl r3, r4
09            xor r2, r3
10            shl r3, r4
11            xor r2, r3
11            
12            xor r3, r3
13            mov r4, [r3*4 +0E48h]
14            mov [r3*4 + 0E48h], r2
15            xor r2, r4
16            mov [r0*4 + 0E48h], r2
16            
17            mov r1, 0x1
18            add r0, r1
19            mov r1, r0
20            mov r2, 0x81
21            sub r1, r2
22            mov r2, 0x9
23            sub r1, r2
24            mov r2, 0x9
25            jnz r2, r1				;loc_03
25            
26            mov r0, 0x81				memcmp
27            mov r1, r0
28            mov r2, 0x9
29            add r1, r2
30loc_30      mov r3, [r0*4 +0E48h]
31            mov r4, [r1*4 +0E48h]
32            sub r3, r4
33            mov r4, 0x7e
34            jnz r4, r3				;loc_42
35            mov r3, 0x1
36            add r0, r3
37            add r1, r3
38            sub r2, r3
39            mov r4, 0x5a
40            jnz r4, r2				;loc_30
41            correct!
42
42 loc_42     wrong!